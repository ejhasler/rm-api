using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace RestaurantManagerAPI.Models
{
    /// <summary>
    /// Represents an <c>Order</c> in the restaurant menu.
    /// </summary>
    /// <author>Even Johan Pereira Haslerud</author>
    /// <date>30.08.2024</date>
    public class Order : IValidatableObject
    {
        /// <summary>
        /// Gets or sets the unique identifier for the Order.
        /// This identifier is auto-generated by the database and
        /// serves as the primary key.
        /// </summary>
        /// <value>
        /// The unique identifier for the Order, which must be
        /// a positive integer greater than zero.
        /// </value>
        /// <example>1</example>
        public int Id { get; set; }

        /// <summary>
        /// Sets the Date Time of the Order. The Date Time is
        /// a required field and should be in a proper format.
        /// </summary>
        /// <value>
        /// A DateTime representing the Date Time of the Order.
        /// </value>
        /// <example>2021-08-30T12:00:00</example>
        [Required(ErrorMessage = "DateTime is required.")]
        public DateTime DateTime { get; set; }

        /// <summary>
        /// Gets the list of the menu item IDs associated with
        /// this Order.
        /// </summary>
        /// <value>
        /// A list of integers, where each integer is the unique
        /// identifier of a menu item that is part of the order.
        /// </value>
        /// <example>
        /// [1, 2, 3]
        /// </example>
        [Required(ErrorMessage = "OrderMenuItems are required.")]
        public List<OrderMenuItem> OrderMenuItems { get; set; } = new List<OrderMenuItem>();

        /// <summary>
        /// Validates the order using custom validation logic.
        /// </summary>
        /// <param name="validationContext">The context for validation.</param>
        /// <returns>A list of validation results.</returns>
        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            if (DateTime == default)
            {
                yield return new ValidationResult("DateTime cannot be the default value.", new[] { nameof(DateTime) });
            }
        }
    }
}
